package com.anyun100.storage.monitor.region_center.controller;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.alibaba.fastjson.JSONObject;
import com.anyun100.storage.monitor.client_config_service.service.RegionCenterService;
import com.anyun100.storage.monitor.metadata_service.service.ClientStatusService;
import com.anyun100.storage.monitor.metadata_service.service.MetaDataStatusService;
import com.anyun100.storage.monitor.metadata_service.service.SGWStatusService;
import com.google.common.collect.ImmutableMap;;


@RestController
public class RegionCenterController {
	
	@Value("${region-center-id:-1}")
	private String id;

	/*@Autowired
	private ClientStatusService clientStatusService;*/
	
	@Autowired
	private RegionCenterService regionCenterService;
	
	@Autowired
	private MetaDataStatusService metaDataStatusService;
	
	@Autowired
	private SGWStatusService sgwStatusService;
	
	@RequestMapping(value = "/maps")
	@ResponseBody
	public JSONObject getMaps() {
		JSONObject json = new JSONObject();
		if (id.equals("-1")) {
			json.put("error_code", 1);
			return json;
		}
		String cityName = regionCenterService.getRegionCenter(Long.parseLong(id)).getLocation().getLocationName();
		json.put("error_code", 0);
		json.put("data", ImmutableMap.of("center_name", regionCenterService.getRegionCenter(Long.parseLong(id)).getRegionName(), "city_name", 
				cityName.substring(0, cityName.length() - 1),
				"center_id", id, "client_city", regionCenterService.getRegionCenterStat()));
		return json;
	}
	
	@RequestMapping(value = "/list_init_client_status_for_disk_by_site_id", method = RequestMethod.POST)
	@ResponseBody
	public JSONObject getInitClientStatusForDiskBySiteId(@RequestParam(value = "site_id", required = true) Long siteId) {
		return null;
		//return clientStatusService.getInitialDataForDisk(siteId);
	}
	
	@RequestMapping(value = "/list_latest_client_status_for_disk_by_site_id", method = RequestMethod.POST)
	@ResponseBody
	public JSONObject getLatestClientStatusForDiskBySiteId(@RequestParam(value = "site_id", required = true) Long siteId,
													@RequestParam(value = "number_received", required = true) Long numberOfreceived) {
		return null;
		//return clientStatusService.getLatestDataForDisk(siteId, numberOfreceived);
	}
	
	@RequestMapping(value = "/metadata")
	@ResponseBody
	public JSONObject getInitMetaDataStatus() {
		return metaDataStatusService.getInitialData(Long.parseLong(id));
	}
	
	@RequestMapping(value = "/metadata/recalc")
	@ResponseBody
	public JSONObject doMetadataRecalc() {
		metaDataStatusService.doRecalc(Long.parseLong(id));
		JSONObject json = new JSONObject();
		json.put("error_code", 0);
		return json;
	}
	
	
	
	@RequestMapping(value = "/metadata-update")
	@ResponseBody
	public JSONObject getLatestMetaDataStatus(@RequestParam(value = "length", required = true) Long numberOfreceived) {
		return metaDataStatusService.getLatestData(Long.parseLong(id), numberOfreceived);
	}
	
	@RequestMapping(value = "/monitor")
	@ResponseBody
	public JSONObject getInitMonitorDataStatus() {
		return metaDataStatusService.getInitialData(Long.parseLong(id));
	}
	
	@RequestMapping(value = "/monitor-update")
	@ResponseBody
	public JSONObject getLatestMonitorDataStatus(@RequestParam(value = "length", required = true) Long numberOfreceived) {
		return metaDataStatusService.getLatestData(Long.parseLong(id), numberOfreceived);
	}
	
	@RequestMapping(value = "/gateway")
	@ResponseBody
	public JSONObject getInitGatewayStatus(@RequestParam(value = "gateway_id", required = true) Long sgwId) {
		return sgwStatusService.getInitialData(sgwId);
	}
	
	@RequestMapping(value = "/gateway/recalc")
	@ResponseBody
	public JSONObject doGatewayRecalc() {
		sgwStatusService.doRecalc(Long.parseLong(id));
		JSONObject json = new JSONObject();
		json.put("error_code", 0);
		return json;
	}
	
	@RequestMapping(value = "/gateway-update")
	@ResponseBody
	public JSONObject getLatestGatewayStatus(@RequestParam(value = "gateway_id", required = true) Long sgwId,
														   @RequestParam(value = "length", required = true) Long numberOfreceived) {
		return sgwStatusService.getLatestData(sgwId, numberOfreceived);
	}
	
	@RequestMapping(value = "/list_latest_metadata_status_for_mem_by_region_id", method = RequestMethod.POST)
	@ResponseBody
	public JSONObject getLatestMetaDataStatusForMemBySiteId(@RequestParam(value = "region_id", required = true) Long regionId,
													@RequestParam(value = "number_received", required = true) Long numberOfreceived) {
		return metaDataStatusService.getLatestDataForMem(regionId, numberOfreceived);
	}
	
	@RequestMapping(value = "/list_init_metadata_status_for_cpu_by_region_id", method = RequestMethod.POST)
	@ResponseBody
	public JSONObject getInitMetaDataStatusForCPUBySiteId(@RequestParam(value = "region_id", required = true) Long regionId) {
		return metaDataStatusService.getInitialDataForCPU(regionId);
	}
	
	@RequestMapping(value = "/list_latest_metadata_status_for_cpu_by_region_id", method = RequestMethod.POST)
	@ResponseBody
	public JSONObject getLatestMetaDataStatusForCPUBySiteId(@RequestParam(value = "region_id", required = true) Long regionId,
													@RequestParam(value = "number_received", required = true) Long numberOfreceived) {
		return metaDataStatusService.getLatestDataForCPU(regionId, numberOfreceived);
	}
	
	
	@RequestMapping(value = "/list_init_sgw_status_for_disk_by_region_id", method = RequestMethod.POST)
	@ResponseBody
	public JSONObject getInitSGWStatusForDiskBySiteId(@RequestParam(value = "region_id", required = true) Long regionId) {
		return null;
		//return sgwStatusService.getInitialDataForDisk(regionId);
	}
	
	@RequestMapping(value = "/list_latest_sgw_status_for_disk_by_region_id", method = RequestMethod.POST)
	@ResponseBody
	public JSONObject getLatestSGWStatusForDiskBySiteId(@RequestParam(value = "region_id", required = true) Long regionId,
													@RequestParam(value = "number_received", required = true) Long numberOfreceived) {
		return null;
		//return sgwStatusService.getLatestDataForDisk(regionId, numberOfreceived);
	}
	
	@RequestMapping(value = "/list_init_sgw_status_for_mem_by_region_id", method = RequestMethod.POST)
	@ResponseBody
	public JSONObject getInitSGWStatusForMemBySiteId(@RequestParam(value = "region_id", required = true) Long regionId) {
		return null;
		//return sgwStatusService.getInitialDataForMem(regionId);
	}
	
	@RequestMapping(value = "/list_latest_sgw_status_for_mem_by_region_id", method = RequestMethod.POST)
	@ResponseBody
	public JSONObject getLatestSGWStatusForMemBySiteId(@RequestParam(value = "region_id", required = true) Long regionId,
													@RequestParam(value = "number_received", required = true) Long numberOfreceived) {
		return null;
		//return sgwStatusService.getLatestDataForMem(regionId, numberOfreceived);
	}
	
	@RequestMapping(value = "/list_init_sgw_status_for_cpu_by_region_id", method = RequestMethod.POST)
	@ResponseBody
	public JSONObject getInitSGWStatusForCPUBySiteId(@RequestParam(value = "region_id", required = true) Long regionId) {
		return null;
		//return sgwStatusService.getInitialDataForCPU(regionId);
	}
	
	@RequestMapping(value = "/list_latest_sgw_status_for_cpu_by_region_id", method = RequestMethod.POST)
	@ResponseBody
	public JSONObject getLatestSGWStatusForCPUBySiteId(@RequestParam(value = "region_id", required = true) Long regionId,
													@RequestParam(value = "number_received", required = true) Long numberOfreceived) {
		return null;
		//return sgwStatusService.getLatestDataForCPU(regionId, numberOfreceived);
	}
}
